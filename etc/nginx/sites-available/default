##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# We want HTTPS to be the default, so make all HTTP requests redirect to that
server {
	listen 80;
	listen [::]:80;
	server_name timelines.issarice.com;
	return 301 https://$host$request_uri;
}

# Main configuration
server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	ssl_certificate /etc/letsencrypt/live/timelines.issarice.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/timelines.issarice.com/privkey.pem;

	server_name timelines.issarice.com;

	root /var/www/timelines;
	index index.php;

	location / {
		try_files $uri $uri/ @mediawiki;
	}

	# location @rewrite {
		# rewrite ^/(.*)$ /index.php?title=$1&$args;
	# }

	location ~ \.php$ {
		# For fastcgi_params vs fastcgi.conf, see
		# http://blog.martinfjordvald.com/2013/04/nginx-config-history-fastcgi_params-versus-fastcgi-conf/
		# The short story is that the former has one extra line.
		include fastcgi.conf;
		# The example at
		# https://www.nginx.com/resources/wiki/start/topics/recipes/mediawiki/
		# just has "/tmp/phpfpm.sock" here, which made me think that
		# php-fpm just wanted a place to write to, but I found out that
		# apparently this sock file should actually already exist on
		# the filesystem, which happens to be
		# "/var/run/php/php7.0-fpm.sock" on Ubuntu. I think
		# "/run/php/php7.0-fpm.sock" will also work here, as that
		# exists on Ubuntu. Why would it be in two places? I have no
		# idea.
		fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	}

	location @mediawiki {
		rewrite ^/wiki([^?]*)(?:\?(.*))? /index.php?title=$1&$2 last;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	location ~ /\.ht {
		deny all;
	}
}
